# Fibonacci Sequence
MAX = 10000
def main():
    n0 = 0
    n1 = 1
    while n0 <= MAX:
        print (n0)
        n3 = n0 + n1
        n0 = n1
        n1 = n3
        
# Python Boilerplate
if __name__ == "__main__":
    main()

#Remainder Division
def main():
num1 = int(input("What is your dividend?")
num2 = int(input("What is your divisor?")
while num2 == 0:
  num2 = int(input("What is your divisor?")
num3 = int(num1 / num2)
num4 = num1 // num2
print("The quotient is " + num3 +". The divisor is " + num4 + ".")

#Leap Year
def main():
    year = int(input("Input a year to know if it is a leap year: "))
    if year % 4 == 0:
        if year % 100 == 0 or ((year % 100) % 2) == 0:
            if year % 400 == 0 or ((year % 400) % 2) == 0:
                print("That is a leap year!")
            else:
                print("That is not a leap year!")
        else:
                print("That is not a leap year!")
    else:
                print("That is not a leap year!")

# Python Boilerplate
if __name__ == "__main__":
    main()
 
#Roller Coaster Ride
MIN_HEIGHT = 160 
def main():
    height = float(input("How tall are you? "))
    if height >= MIN_HEIGHT:
        print("You're tall enough to ride!")
    else:
        print("You're not tall enough to ride, but maybe next year!")

def tall_enough_extension():
    height = input("How tall are you? ")
    while height != "":
        height = float(height)
        if height >= MIN_HEIGHT:
            print("You're tall enough to ride!")
        else:
            print("You're not tall enough to ride, but maybe next year!")
        height = input("How tall are you? ") # ask user again

# Python Boilerplate
if __name__ == "__main__":
    main()
    
# Factorial
def main():
    MAX_NUM = int(input("Input the nth term of the value you need in the Fibonacci Sequence.")
    for i in range(MAX_NUM+1):
        print(i, factorial(i))
    
def factorial(n):
    result = 1
    for i in range(1, n+1):
        result *= i
    return result
    
# Python Boilerplate
if __name__ == "__main__":
    main()
    
import random
NUM_EXPERIMENTS = 5340
N_STONES = 20

def main():
	n_player_1_wins = 0
	for i in range(NUM_EXPERIMENTS):
		winner = simulate_random_nimm()
		if winner == 1:
			n_player_1_wins += 1
	print(n_player_1_wins)

def simulate_random_nimm():
	stones = N_STONES
	turn = 1
	while stones > 0:
		take = random.randint(1, 2)
		stones -= take
		if turn == 1:
			turn = 2
		else:
			turn = 1
	return turn

# Python Boilerplate
if __name__ == "__main__":
    main()
